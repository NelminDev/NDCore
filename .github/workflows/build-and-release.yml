name: Build & Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string

concurrency:
  group: "build-release"
  cancel-in-progress: true

jobs:
  check_should_run:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ github.event_name == 'workflow_dispatch' || (startsWith(github.event.head_commit.message, 'release(') && endsWith(github.event.head_commit.message, ')')) }}
    steps:
      - run: echo "Checking if workflow should run"

  build:
    needs: check_should_run
    if: needs.check_should_run.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.13

      - name: Generate Gradle Wrapper
        run: gradle wrapper --gradle-version 8.13

      - name: Build with Gradle
        run: ./gradlew clean shadowJar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NDCore-${{ github.run_id }}
          path: build/libs/NDCore-shaded.jar

  release:
    needs: [check_should_run, build]
    if: needs.check_should_run.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: NDCore-${{ github.run_id }}
          path: build/libs

      - name: Import GPG Key
        id: import_gpg
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --batch --pinentry-mode loopback --passphrase "$PASSPHRASE" --import private.asc
          echo "fingerprint=$(gpg --fingerprint --with-colons ${{ secrets.GPG_KEY_ID }} | awk -F: '$1 == "fpr" {print $10;exit}')" >> $GITHUB_OUTPUT
          rm private.asc

      - name: Sign JAR
        run: |
          cd build/libs
          mv NDCore-shaded.jar NDCore.jar
          gpg --batch --pinentry-mode loopback \
              --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              --detach-sign --armor \
              --local-user ${{ secrets.GPG_KEY_ID }} \
              --output NDCore.jar.asc \
              NDCore.jar

          gpg --verify NDCore.jar.asc NDCore.jar

      - name: Prepare Release Assets
        run: |
          mkdir -p release_files
          cp public-gpg-key.asc release_files/
          cp build/libs/NDCore.jar release_files/
          cp build/libs/NDCore.jar.asc release_files/
          cd release_files

      - name: Extract Version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            VERSION=$(grep "project.version" gradle.properties | cut -d'=' -f2)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Release Notes
        run: cat "descriptions/${{ steps.version.outputs.version }}.txt" > release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: ðŸŽ® NDCore v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          files: |
            release_files/NDCore.jar
            release_files/NDCore.jar.asc
            release_files/public-gpg-key.asc
          draft: false
          prerelease: false